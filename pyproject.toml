[build-system]
requires = ["setuptools>=61.0.0", "wheel", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "seb"
version = "0.13.11"
authors = [
  { name = "Kenneth Enevoldsen", email = "Kennethcenevoldsen@gmail.com" },
]
license = { file = "LICENSE" }
description = "Scandinavian Embedding Benchmark"
classifiers = [
  "Operating System :: POSIX :: Linux",
  "Operating System :: MacOS :: MacOS X",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.9,<3.13"

dependencies = [
  "mteb[beir]==1.1.1",
  "pydantic>=2.1.0",
  "catalogue>=2.0.8",
  "radicli>=0.0.25",
  "datasets<2.20.0",   # will need to update the mteb version (current implementation of MTEB does not pass the "trust_remote_code" argument.
  "fsspec<=2023.9.2",  # can be removed updated along with the datasets limit when MTEB is updated
  "psutil>=7.0.0",
]

[project.optional-dependencies]
mistral = [
  "transformers>=4.31.0", # lower bound required for mistral models (could potentially be lowered)
]
openai = ["openai>=0.27.4"]
voyageai = ["voyageai>=0.2.3"]
cohere = ["cohere>=4.34"]
sonar = [
  "fairseq2>=0.1.0",    # requires sudo apt-get update -y; sudo apt install libsndfile1
  "sonar-space>=0.2.1",
] # fairseq2 only works for linux at the moment
arctic = ["xformers>=0.0.10"] # --prerelease=allow
fasttext = ["pybind11>=2.11.0", "fasttext-wheel>=0.9.0"]
jina = ["einops", "numpy<2.0.0"]
llm2vec = [
  "ninja>=1.10.0",                              # recommended by pip flash-attn docs to speed up install significantly
  "llm2vec>=0.2.2",
  "flash-attn>=2.0.1; sys_platform == 'linux'",
]


[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.urls]
homepage = "https://github.com/KennethEnevoldsen/scandinavian-embedding-benchmark"
repository = "https://github.com/KennethEnevoldsen/scandinavian-embedding-benchmark"
documentation = "https://KennethEnevoldsen.github.io/scandinavian-embedding-benchmark/"


[project.scripts]
seb = "seb.cli.cli:setup_cli"

[tool.pyright]
exclude = [".*venv*"]
pythonPlatform = "Darwin"

[tool.ruff]
line-length = 150
target-version = "py39"

[tool.ruff.lint]
select = [
  "F",      # pyflakes rules,
  "I",      # sorting for imports
  "E",      # formatting for docs
  "D",      # formatting for docs
  "UP",     # upgrade to latest syntax if possible
  "FA",     # Future annotations
  "C4",     # cleaner comprehensions
  "A",
  "ANN",
  "ARG",
  "B",
  "COM",
  "D417",
  "ERA",
  "I",
  "ICN",
  "NPY001",
  "PD002",
  "PIE",
  "PLE",
  "PLW",
  "PT",
  "UP",
  "Q",
  "PTH",
  "RSE",
  "RET",
  "RUF",
  "SIM",
  "W",
]
ignore = [
  "ANN101",
  "ANN102",
  "ANN401",
  "E402",
  "E501",
  "E741",
  "F401",
  "F841",
  "RET504",
  "COM812",
  "D100",   # Missing docstring in public module
  "D101",   # Missing docstring in public class
  "D102",   # Missing docstring in public method
  "D103",   # Missing docstring in public function
  "D105",   # Missing docstring in magic method
  "D104",   # Missing docstring in public package
  "D107",   # Missing docstring in __init__
]
# Allow autofix for all enabled rules (when `--fix`) is provided.
unfixable = ["ERA"]
exclude = [".venv"]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.flake8-annotations]
mypy-init-return = true
suppress-none-returning = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]

[tool.semantic_release]
branch = "main"
version_toml = ["pyproject.toml:project.version"]
build_command = "python -m pip install build; python -m build"

[tool.setuptools]
include-package-data = true

[tool.uv]
conflicts = [[{ extra = "sonar" }, { extra = "arctic" }]]
default-groups = ["dev", "tests", "docs"]
no-build-isolation-package = ["xformers", "flash-attn"]

[dependency-groups]
dev = ["cruft>=2.0.0", "pyright==1.1.348", "ruff==0.6.0"]
tests = ["pytest>=7.1.3", "pytest-cov>=3.0.0"]
docs = [
  "mkdocs==1.5.1",
  "mkdocs-jupyter==0.24.6",
  "mkdocs-material==9.1.21",
  "mkdocstrings[python-legacy]==0.22.0",
  # for managing tables
  "datawrapper>=0.5.3,<0.6.0",
  # for tutorials
  "jupyter>=1.0.0",
]
